{
  "id": 0,
  "name": "typedoc",
  "kind": 1,
  "kindString": "project",
  "children": [
    {
      "id": 1,
      "name": "function",
      "kind": 2,
      "kindString": "module",
      "children": [
        {
          "id": 29,
          "name": "moduleFunction",
          "kind": 4,
          "kindString": "namespace",
          "comment": {
            "shortText": "This is the module extending the function moduleFunction().",
            "text": "",
            "tags": []
          },
          "children": [
            {
              "id": 30,
              "name": "append",
              "kind": 64,
              "kindString": "function",
              "comment": {
                "shortText": "This function is appended to another function.",
                "text": "",
                "tags": []
              },
              "children": [
                {
                  "id": 31,
                  "name": "append",
                  "kind": 8192,
                  "kindString": "signature",
                  "comment": {
                    "shortText": "This function is appended to another function.",
                    "text": "",
                    "tags": []
                  },
                  "parameters": [],
                  "typeParameters": [],
                  "returnType": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 32,
              "name": "prepend",
              "kind": 64,
              "kindString": "function",
              "comment": {
                "shortText": "This function is appended to another function.",
                "text": "",
                "tags": []
              },
              "children": [
                {
                  "id": 33,
                  "name": "prepend",
                  "kind": 8192,
                  "kindString": "signature",
                  "comment": {
                    "shortText": "This function is appended to another function.",
                    "text": "",
                    "tags": []
                  },
                  "parameters": [],
                  "typeParameters": [],
                  "returnType": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ]
        },
        {
          "id": 46,
          "name": "variableFunction",
          "kind": 32,
          "kindString": "variable",
          "comment": {
            "shortText": "This is a function that is assigned to a variable.",
            "text": "",
            "tags": [
              {
                "tagName": "param",
                "text": "someParam",
                "paramName": "This is some numeric parameter."
              },
              {
                "tagName": "returns",
                "text": "\n",
                "paramName": "This is the return value of the function."
              }
            ]
          },
          "type": {
            "kind": 2048,
            "kindString": "signature",
            "typeParameters": [],
            "parameters": [
              {
                "kind": 8192,
                "kindString": "signatureParameter",
                "name": "someParam",
                "isOptional": false,
                "isRest": false,
                "parameterType": {
                  "kind": 32,
                  "kindString": "intrinsic",
                  "name": "number"
                }
              }
            ],
            "returnType": {
              "kind": 32,
              "kindString": "intrinsic",
              "name": "number"
            }
          },
          "defaultValue": "function (someParam: number): number {\n  return 0;\n}"
        },
        {
          "id": 34,
          "name": "assertionFunction",
          "kind": 64,
          "kindString": "function",
          "comment": {
            "shortText": "This is an assertion function.",
            "text": "",
            "tags": [
              {
                "tagName": "param",
                "text": "condition\n",
                "paramName": "The condition that is asserted to be true when this function returns."
              }
            ]
          },
          "children": [
            {
              "id": 36,
              "name": "assertionFunction",
              "kind": 8192,
              "kindString": "signature",
              "comment": {
                "shortText": "This is an assertion function.",
                "text": "",
                "tags": [
                  {
                    "tagName": "param",
                    "text": "condition\n",
                    "paramName": "The condition that is asserted to be true when this function returns."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 35,
                  "name": "condition",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "typeParameters": [],
              "returnType": {
                "kind": 256,
                "kindString": "predicate",
                "name": "condition",
                "asserts": true
              }
            }
          ]
        },
        {
          "id": 40,
          "name": "assertIsNonNull",
          "kind": 64,
          "kindString": "function",
          "comment": {
            "shortText": "Asserts that an argument is not null.",
            "text": "",
            "tags": [
              {
                "tagName": "param",
                "text": "arg\n",
                "paramName": ""
              }
            ]
          },
          "children": [
            {
              "id": 42,
              "name": "assertIsNonNull",
              "kind": 8192,
              "kindString": "signature",
              "comment": {
                "shortText": "Asserts that an argument is not null.",
                "text": "",
                "tags": [
                  {
                    "tagName": "param",
                    "text": "arg\n",
                    "paramName": ""
                  }
                ]
              },
              "parameters": [
                {
                  "id": 41,
                  "name": "arg",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 262144,
                    "kindString": "union",
                    "types": [
                      {
                        "kind": 1024,
                        "kindString": "reference",
                        "name": "T",
                        "typeArguments": []
                      },
                      {
                        "kind": 16384,
                        "kindString": "literal",
                        "value": null
                      },
                      {
                        "kind": 32,
                        "kindString": "intrinsic",
                        "name": "undefined"
                      }
                    ]
                  }
                }
              ],
              "typeParameters": [
                {
                  "kind": 131072,
                  "kindString": "typeParameter",
                  "name": "T"
                }
              ],
              "returnType": {
                "kind": 256,
                "kindString": "predicate",
                "name": "arg",
                "asserts": true,
                "targetType": {
                  "kind": 1024,
                  "kindString": "reference",
                  "name": "T",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 37,
          "name": "checkerFunction",
          "kind": 64,
          "kindString": "function",
          "comment": {
            "shortText": "Assertion function with a type.",
            "text": "",
            "tags": [
              {
                "tagName": "param",
                "text": "anything\n",
                "paramName": ""
              }
            ]
          },
          "children": [
            {
              "id": 39,
              "name": "checkerFunction",
              "kind": 8192,
              "kindString": "signature",
              "comment": {
                "shortText": "Assertion function with a type.",
                "text": "",
                "tags": [
                  {
                    "tagName": "param",
                    "text": "anything\n",
                    "paramName": ""
                  }
                ]
              },
              "parameters": [
                {
                  "id": 38,
                  "name": "anything",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "typeParameters": [],
              "returnType": {
                "kind": 256,
                "kindString": "predicate",
                "name": "anything",
                "asserts": false,
                "targetType": {
                  "kind": 32,
                  "kindString": "intrinsic",
                  "name": "string"
                }
              }
            }
          ]
        },
        {
          "id": 2,
          "name": "exportedFunction",
          "kind": 64,
          "kindString": "function",
          "comment": {
            "shortText": "This is a simple exported function.",
            "text": "",
            "tags": []
          },
          "children": [
            {
              "id": 3,
              "name": "exportedFunction",
              "kind": 8192,
              "kindString": "signature",
              "comment": {
                "shortText": "This is a simple exported function.",
                "text": "",
                "tags": []
              },
              "parameters": [],
              "typeParameters": [],
              "returnType": {
                "kind": 32,
                "kindString": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 13,
          "name": "functionWithDefaults",
          "kind": 64,
          "kindString": "function",
          "comment": {
            "shortText": "This is a function with a parameter that has a default value.",
            "text": "",
            "tags": [
              {
                "tagName": "param",
                "text": "valueA",
                "paramName": "A parameter with a default string value."
              },
              {
                "tagName": "param",
                "text": "valueB",
                "paramName": "A parameter with a default numeric value."
              },
              {
                "tagName": "param",
                "text": "valueC",
                "paramName": "A parameter with a default NaN value."
              },
              {
                "tagName": "param",
                "text": "valueD",
                "paramName": "A parameter with a default boolean value."
              },
              {
                "tagName": "param",
                "text": "valueE",
                "paramName": "A parameter with a default null value."
              },
              {
                "tagName": "returns",
                "text": "\n",
                "paramName": "This is the return value of the function."
              }
            ]
          },
          "children": [
            {
              "id": 19,
              "name": "functionWithDefaults",
              "kind": 8192,
              "kindString": "signature",
              "comment": {
                "shortText": "This is a function with a parameter that has a default value.",
                "text": "",
                "tags": [
                  {
                    "tagName": "param",
                    "text": "valueA",
                    "paramName": "A parameter with a default string value."
                  },
                  {
                    "tagName": "param",
                    "text": "valueB",
                    "paramName": "A parameter with a default numeric value."
                  },
                  {
                    "tagName": "param",
                    "text": "valueC",
                    "paramName": "A parameter with a default NaN value."
                  },
                  {
                    "tagName": "param",
                    "text": "valueD",
                    "paramName": "A parameter with a default boolean value."
                  },
                  {
                    "tagName": "param",
                    "text": "valueE",
                    "paramName": "A parameter with a default null value."
                  },
                  {
                    "tagName": "returns",
                    "text": "\n",
                    "paramName": "This is the return value of the function."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 14,
                  "name": "valueA",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"defaultValue\""
                },
                {
                  "id": 15,
                  "name": "valueB",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "number"
                  },
                  "defaultValue": "100"
                },
                {
                  "id": 16,
                  "name": "valueC",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "number"
                  },
                  "defaultValue": "Number.NaN"
                },
                {
                  "id": 17,
                  "name": "valueD",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "boolean"
                  },
                  "defaultValue": "true"
                },
                {
                  "id": 18,
                  "name": "valueE",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "boolean"
                  },
                  "defaultValue": "null"
                }
              ],
              "typeParameters": [],
              "returnType": {
                "kind": 32,
                "kindString": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 9,
          "name": "functionWithOptionalValue",
          "kind": 64,
          "kindString": "function",
          "comment": {
            "shortText": "This is a function with a parameter that is optional.",
            "text": "",
            "tags": [
              {
                "tagName": "param",
                "text": "requiredParam",
                "paramName": "A normal parameter."
              },
              {
                "tagName": "param",
                "text": "optionalParam\n",
                "paramName": "An optional parameter."
              }
            ]
          },
          "children": [
            {
              "id": 12,
              "name": "functionWithOptionalValue",
              "kind": 8192,
              "kindString": "signature",
              "comment": {
                "shortText": "This is a function with a parameter that is optional.",
                "text": "",
                "tags": [
                  {
                    "tagName": "param",
                    "text": "requiredParam",
                    "paramName": "A normal parameter."
                  },
                  {
                    "tagName": "param",
                    "text": "optionalParam\n",
                    "paramName": "An optional parameter."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 10,
                  "name": "requiredParam",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 11,
                  "name": "optionalParam",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "typeParameters": [],
              "returnType": {
                "kind": 32,
                "kindString": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 4,
          "name": "functionWithParameters",
          "kind": 64,
          "kindString": "function",
          "comment": {
            "shortText": "This is a function with multiple arguments and a return value.",
            "text": "",
            "tags": [
              {
                "tagName": "param",
                "text": "paramZ",
                "paramName": "This is a string parameter."
              },
              {
                "tagName": "param",
                "text": "paramG\n    This sentence is placed in the next line.\n",
                "paramName": "This is a parameter flagged with any."
              },
              {
                "tagName": "param",
                "text": "paramA\n  This is a **parameter** pointing to an interface.\n\n  ~~~\n  const value:BaseClass = new BaseClass('test');\n  functionWithArguments('arg', 0, value);\n  ~~~\n",
                "paramName": ""
              },
              {
                "tagName": "returns",
                "text": "\n",
                "paramName": "This is the return value of the function."
              }
            ]
          },
          "children": [
            {
              "id": 8,
              "name": "functionWithParameters",
              "kind": 8192,
              "kindString": "signature",
              "comment": {
                "shortText": "This is a function with multiple arguments and a return value.",
                "text": "",
                "tags": [
                  {
                    "tagName": "param",
                    "text": "paramZ",
                    "paramName": "This is a string parameter."
                  },
                  {
                    "tagName": "param",
                    "text": "paramG\n    This sentence is placed in the next line.\n",
                    "paramName": "This is a parameter flagged with any."
                  },
                  {
                    "tagName": "param",
                    "text": "paramA\n  This is a **parameter** pointing to an interface.\n\n  ~~~\n  const value:BaseClass = new BaseClass('test');\n  functionWithArguments('arg', 0, value);\n  ~~~\n",
                    "paramName": ""
                  },
                  {
                    "tagName": "returns",
                    "text": "\n",
                    "paramName": "This is the return value of the function."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 5,
                  "name": "paramZ",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 6,
                  "name": "paramG",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 7,
                  "name": "paramA",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 1024,
                    "kindString": "reference",
                    "name": "Object",
                    "typeArguments": []
                  }
                }
              ],
              "typeParameters": [],
              "returnType": {
                "kind": 32,
                "kindString": "intrinsic",
                "name": "number"
              }
            }
          ]
        },
        {
          "id": 43,
          "name": "isNonNull",
          "kind": 64,
          "kindString": "function",
          "comment": {
            "shortText": "Checks that an argument is not null.",
            "text": "",
            "tags": [
              {
                "tagName": "param",
                "text": "arg\n",
                "paramName": ""
              }
            ]
          },
          "children": [
            {
              "id": 45,
              "name": "isNonNull",
              "kind": 8192,
              "kindString": "signature",
              "comment": {
                "shortText": "Checks that an argument is not null.",
                "text": "",
                "tags": [
                  {
                    "tagName": "param",
                    "text": "arg\n",
                    "paramName": ""
                  }
                ]
              },
              "parameters": [
                {
                  "id": 44,
                  "name": "arg",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 262144,
                    "kindString": "union",
                    "types": [
                      {
                        "kind": 1024,
                        "kindString": "reference",
                        "name": "T",
                        "typeArguments": []
                      },
                      {
                        "kind": 16384,
                        "kindString": "literal",
                        "value": null
                      },
                      {
                        "kind": 32,
                        "kindString": "intrinsic",
                        "name": "undefined"
                      }
                    ]
                  }
                }
              ],
              "typeParameters": [
                {
                  "kind": 131072,
                  "kindString": "typeParameter",
                  "name": "T"
                }
              ],
              "returnType": {
                "kind": 256,
                "kindString": "predicate",
                "name": "arg",
                "asserts": false,
                "targetType": {
                  "kind": 1024,
                  "kindString": "reference",
                  "name": "T",
                  "typeArguments": []
                }
              }
            }
          ]
        },
        {
          "id": 26,
          "name": "moduleFunction",
          "kind": 64,
          "kindString": "function",
          "comment": {
            "shortText": "This is a function that is extended by a module.",
            "text": "",
            "tags": [
              {
                "tagName": "param",
                "text": "arg\n",
                "paramName": "An argument."
              }
            ]
          },
          "children": [
            {
              "id": 28,
              "name": "moduleFunction",
              "kind": 8192,
              "kindString": "signature",
              "comment": {
                "shortText": "This is a function that is extended by a module.",
                "text": "",
                "tags": [
                  {
                    "tagName": "param",
                    "text": "arg\n",
                    "paramName": "An argument."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 27,
                  "name": "arg",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "typeParameters": [],
              "returnType": {
                "kind": 32,
                "kindString": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 20,
          "name": "multipleSignatures",
          "kind": 64,
          "kindString": "function",
          "comment": {
            "shortText": "This is the second signature of a function with multiple signatures.",
            "text": "",
            "tags": [
              {
                "tagName": "param",
                "text": "value",
                "paramName": "An object containing the name value."
              },
              {
                "tagName": "param",
                "text": "value.name\n",
                "paramName": "A value of the object."
              }
            ]
          },
          "children": [
            {
              "id": 22,
              "name": "multipleSignatures",
              "kind": 8192,
              "kindString": "signature",
              "comment": {
                "shortText": "This is the first signature of a function with multiple signatures.",
                "text": "",
                "tags": [
                  {
                    "tagName": "param",
                    "text": "value\n",
                    "paramName": "The name value."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 21,
                  "name": "value",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "kind": 32,
                    "kindString": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "typeParameters": [],
              "returnType": {
                "kind": 32,
                "kindString": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 25,
              "name": "multipleSignatures",
              "kind": 8192,
              "kindString": "signature",
              "comment": {
                "shortText": "This is the second signature of a function with multiple signatures.",
                "text": "",
                "tags": [
                  {
                    "tagName": "param",
                    "text": "value",
                    "paramName": "An object containing the name value."
                  },
                  {
                    "tagName": "param",
                    "text": "value.name\n",
                    "paramName": "A value of the object."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 24,
                  "name": "value",
                  "kind": 16384,
                  "kindString": "parameter",
                  "type": {
                    "id": 23,
                    "name": "TODO",
                    "kind": 512,
                    "kindString": "object",
                    "children": [],
                    "signatures": [],
                    "constructSignatures": [],
                    "typeParameters": []
                  }
                }
              ],
              "typeParameters": [],
              "returnType": {
                "kind": 32,
                "kindString": "intrinsic",
                "name": "string"
              }
            }
          ]
        }
      ]
    },
    {
      "id": 47,
      "name": "generic-function",
      "kind": 2,
      "kindString": "module",
      "children": []
    },
    {
      "id": 48,
      "name": "implicit-types",
      "kind": 2,
      "kindString": "module",
      "children": [
        {
          "id": 51,
          "name": "BreakpointRange",
          "kind": 256,
          "kindString": "interface",
          "children": [
            {
              "id": 53,
              "name": "end",
              "kind": 1024,
              "kindString": "property",
              "type": {
                "kind": 32,
                "kindString": "intrinsic",
                "name": "number"
              },
              "visibility": "public"
            },
            {
              "id": 52,
              "name": "start",
              "kind": 1024,
              "kindString": "property",
              "type": {
                "kind": 32,
                "kindString": "intrinsic",
                "name": "number"
              },
              "visibility": "public"
            }
          ],
          "signatures": [],
          "constructSignatures": [],
          "typeParameters": [],
          "extendedTypes": []
        },
        {
          "id": 49,
          "name": "getBreakpoints",
          "kind": 64,
          "kindString": "function",
          "children": [
            {
              "id": 50,
              "name": "getBreakpoints",
              "kind": 8192,
              "kindString": "signature",
              "parameters": [],
              "typeParameters": [],
              "returnType": {
                "kind": 64,
                "kindString": "object",
                "properties": [
                  {
                    "kind": 128,
                    "kindString": "property",
                    "name": "small",
                    "isReadonly": false,
                    "isOptional": false,
                    "propertyType": {
                      "kind": 1024,
                      "kindString": "reference",
                      "name": "BreakpointRange",
                      "typeArguments": [],
                      "target": 51
                    }
                  },
                  {
                    "kind": 128,
                    "kindString": "property",
                    "name": "medium",
                    "isReadonly": false,
                    "isOptional": false,
                    "propertyType": {
                      "kind": 1024,
                      "kindString": "reference",
                      "name": "BreakpointRange",
                      "typeArguments": [],
                      "target": 51
                    }
                  },
                  {
                    "kind": 128,
                    "kindString": "property",
                    "name": "large",
                    "isReadonly": false,
                    "isOptional": false,
                    "propertyType": {
                      "kind": 1024,
                      "kindString": "reference",
                      "name": "BreakpointRange",
                      "typeArguments": [],
                      "target": 51
                    }
                  },
                  {
                    "kind": 128,
                    "kindString": "property",
                    "name": "xlarge",
                    "isReadonly": false,
                    "isOptional": false,
                    "propertyType": {
                      "kind": 1024,
                      "kindString": "reference",
                      "name": "BreakpointRange",
                      "typeArguments": [],
                      "target": 51
                    }
                  },
                  {
                    "kind": 128,
                    "kindString": "property",
                    "name": "xxlarge",
                    "isReadonly": false,
                    "isOptional": false,
                    "propertyType": {
                      "kind": 1024,
                      "kindString": "reference",
                      "name": "BreakpointRange",
                      "typeArguments": [],
                      "target": 51
                    }
                  }
                ],
                "signatures": [],
                "constructSignatures": []
              }
            }
          ]
        }
      ]
    }
  ]
}